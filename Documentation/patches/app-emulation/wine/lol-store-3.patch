From 3a28b189c8ee2ec09393632fcd1f264d9eea371e Mon Sep 17 00:00:00 2001
From: Adam Martinson <adam.r.martinson@gmail.com>
Date: Sun, 18 Mar 2012 14:11:54 -0500
Subject: [PATCH 9/9] ntdll: HACK - Make libgcrypt thread-safe.

---
 dlls/ntdll/loader.c |   36 ++++++++++++++++++++++++++++++++++++
 1 files changed, 36 insertions(+), 0 deletions(-)

diff --git a/dlls/ntdll/loader.c b/dlls/ntdll/loader.c
index 381e2ac..42c9d21 100644
--- a/dlls/ntdll/loader.c
+++ b/dlls/ntdll/loader.c
@@ -27,6 +27,13 @@
 #ifdef HAVE_SYS_MMAN_H
 # include <sys/mman.h>
 #endif
+#ifdef SONAME_LIBGCRYPT
+#ifdef HAVE_PTHREAD_H
+#include <errno.h>
+#include <pthread.h>
+#include <gcrypt.h>
+#endif
+#endif
 
 #define NONAMELESSUNION
 #define NONAMELESSSTRUCT
@@ -2792,12 +2799,41 @@ NTSTATUS WINAPI NtUnloadDriver( const UNICODE_STRING *DriverServiceName )
 }
 
 
+#ifdef GCRY_THREAD_OPTION_PTHREAD_IMPL
+GCRY_THREAD_OPTION_PTHREAD_IMPL;
+static void *libgcrypt_handle;
+static typeof(gcry_control) *pgcry_control;
+#endif
+
 /******************************************************************
  *		DllMain   (NTDLL.@)
  */
 BOOL WINAPI DllMain( HINSTANCE inst, DWORD reason, LPVOID reserved )
 {
     if (reason == DLL_PROCESS_ATTACH) LdrDisableThreadCalloutsForDll( inst );
+
+#ifdef GCRY_THREAD_OPTION_PTHREAD_IMPL
+    libgcrypt_handle = wine_dlopen(SONAME_LIBGCRYPT, RTLD_NOW, NULL, 0);
+    if (!libgcrypt_handle)
+    {
+        WARN("Failed to load %s\n", SONAME_LIBGCRYPT);
+    }
+    else
+    {
+        pgcry_control = wine_dlsym(libgcrypt_handle, "gcry_control", NULL, 0);
+        if (!pgcry_control)
+        {
+            ERR("gcry_control() not found in %s\n", SONAME_LIBGCRYPT);
+        }
+        else
+        {
+            gcry_error_t err = pgcry_control(GCRYCTL_SET_THREAD_CBS, &gcry_threads_pthread);
+            if (err)
+                ERR("gcry_control(GCRYCTL_SET_THREAD_CBS) returned %08x\n", err);
+        }
+    }
+#endif
+
     return TRUE;
 }
 
-- 
1.7.5.4

